// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
} 

enum Experience {
  JUNIOR
  MID
  SENIOR
}

enum Role {
  ADMIN
  USER
}
enum Status {
  PENDING
  ACCEPTED
  REJECTED
}

model Application {
  id String @id @default(cuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  jobListingId String
  coverLetter String?
  jobListing JobListing @relation(fields: [jobListingId], references: [id], onDelete: Cascade)
  status Status?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


}

enum SalaryRange {
  LOW
  MEDIUM
  HIGH
}

model JobListing {
  id String @id @default(cuid())
  title String 
  company String
  location String
  description String
  url String?
  salaryRange SalaryRange
  experience Experience
  skills String[]
  applications Application[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String
  user User @relation(fields: [userId], references: [id])


}

model User {
  id String @id @default(cuid())
  email String @unique
  name String
  password String
  role Role
  applications Application[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isAdminVerified Boolean? @default(false)
  savedJobs String[]
  jobListings JobListing[]
  resumeLink String?


}